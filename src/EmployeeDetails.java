
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import net.coobird.thumbnailator.Thumbnails;
import net.proteanit.sql.DbUtils;


public class EmployeeDetails extends java.awt.Frame {

 /*******************************************************************************************************************************
  Creates a new form Employee Details
 **********************************************************************************************************************************/
    public EmployeeDetails() {
        initComponents();
        conn = DBConnection.connectDB();
        rbtTemp.setVisible(false);
        String sql = "SELECT * FROM employeeinfo";
        updateTableData(sql);
        this.setLocationRelativeTo(null);
        chktemp.setVisible(false);
      txtSearch.getDocument().addDocumentListener(new DocumentListener(){ 
            @Override
            public void insertUpdate(DocumentEvent e) {
                searchFilter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                searchFilter();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
 /*******************************************************************************************************************************
 when this method is called it closes the window.
 **********************************************************************************************************************************/
     private void close(){
        WindowEvent we = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(we);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlMain = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblEmpID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblBloodGroup = new javax.swing.JLabel();
        lblContactNo = new javax.swing.JLabel();
        txtEmpID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtContactno = new javax.swing.JTextField();
        rbtMale = new javax.swing.JRadioButton();
        rbtFemale = new javax.swing.JRadioButton();
        jcbBloodGroup = new javax.swing.JComboBox<>();
        lblAddress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        rbtTemp = new javax.swing.JRadioButton();
        lblImagePath = new javax.swing.JLabel();
        txtImagePath = new javax.swing.JTextField();
        sepEmployeeID = new javax.swing.JSeparator();
        sepContactNo = new javax.swing.JSeparator();
        sepName = new javax.swing.JSeparator();
        sepAge = new javax.swing.JSeparator();
        sepImagePath = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbData = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblDOJ = new javax.swing.JLabel();
        jdcDOJ = new com.toedter.calendar.JDateChooser();
        lblPost = new javax.swing.JLabel();
        jcbPost = new javax.swing.JComboBox<>();
        lblSalary = new javax.swing.JLabel();
        cbxPaid = new javax.swing.JCheckBox();
        cbxPending = new javax.swing.JCheckBox();
        chktemp = new javax.swing.JCheckBox();
        lblTitleBar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        lblImage = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();

        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pnlMain.setBackground(new java.awt.Color(36, 59, 85));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee's Personal Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setOpaque(false);

        lblEmpID.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblEmpID.setForeground(new java.awt.Color(255, 255, 255));
        lblEmpID.setText("Employee ID");

        lblName.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("Name");

        lblGender.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblGender.setForeground(new java.awt.Color(255, 255, 255));
        lblGender.setText("Gender");

        lblAge.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblAge.setForeground(new java.awt.Color(255, 255, 255));
        lblAge.setText("Age");

        lblBloodGroup.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblBloodGroup.setForeground(new java.awt.Color(255, 255, 255));
        lblBloodGroup.setText("Blood group");
        lblBloodGroup.setToolTipText("");

        lblContactNo.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblContactNo.setForeground(new java.awt.Color(255, 255, 255));
        lblContactNo.setText("ContactNo");

        txtEmpID.setEditable(false);
        txtEmpID.setForeground(new java.awt.Color(255, 255, 255));
        txtEmpID.setBorder(null);
        txtEmpID.setNextFocusableComponent(txtName);
        txtEmpID.setOpaque(false);
        txtEmpID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpIDActionPerformed(evt);
            }
        });

        txtName.setForeground(new java.awt.Color(255, 255, 255));
        txtName.setBorder(null);
        txtName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtName.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtName.setNextFocusableComponent(txtAge);
        txtName.setOpaque(false);
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });

        txtAge.setForeground(new java.awt.Color(255, 255, 255));
        txtAge.setBorder(null);
        txtAge.setNextFocusableComponent(rbtMale);
        txtAge.setOpaque(false);
        txtAge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAgeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgeFocusLost(evt);
            }
        });
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });

        txtContactno.setForeground(new java.awt.Color(255, 255, 255));
        txtContactno.setBorder(null);
        txtContactno.setNextFocusableComponent(jcbBloodGroup);
        txtContactno.setOpaque(false);
        txtContactno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtContactnoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtContactnoFocusLost(evt);
            }
        });
        txtContactno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactnoActionPerformed(evt);
            }
        });
        txtContactno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContactnoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactnoKeyTyped(evt);
            }
        });

        buttonGroup1.add(rbtMale);
        rbtMale.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        rbtMale.setForeground(new java.awt.Color(255, 255, 255));
        rbtMale.setText("Male");
        rbtMale.setNextFocusableComponent(txtContactno);
        rbtMale.setOpaque(false);
        rbtMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMaleActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtFemale);
        rbtFemale.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        rbtFemale.setForeground(new java.awt.Color(255, 255, 255));
        rbtFemale.setText("Female");
        rbtFemale.setNextFocusableComponent(lblAge);
        rbtFemale.setOpaque(false);
        rbtFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFemaleActionPerformed(evt);
            }
        });

        jcbBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));
        jcbBloodGroup.setSelectedIndex(-1);
        jcbBloodGroup.setNextFocusableComponent(txtAddress);
        jcbBloodGroup.setOpaque(false);

        lblAddress.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 255, 255));
        lblAddress.setText("Address");

        txtAddress.setColumns(20);
        txtAddress.setLineWrap(true);
        txtAddress.setRows(5);
        txtAddress.setBorder(null);
        txtAddress.setNextFocusableComponent(jdcDOJ);
        txtAddress.setOpaque(false);
        jScrollPane1.setViewportView(txtAddress);

        buttonGroup1.add(rbtTemp);
        rbtTemp.setOpaque(false);
        rbtTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTempActionPerformed(evt);
            }
        });

        lblImagePath.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblImagePath.setForeground(new java.awt.Color(255, 255, 255));
        lblImagePath.setText("Image Path");

        txtImagePath.setForeground(new java.awt.Color(255, 255, 255));
        txtImagePath.setBorder(null);
        txtImagePath.setEnabled(false);
        txtImagePath.setOpaque(false);

        sepName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sepNameFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImagePath)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmpID)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(rbtMale, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbtFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(sepAge, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sepEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sepName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(sepContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblBloodGroup)
                                                .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jcbBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(lblContactNo)
                                        .addGap(24, 24, 24)
                                        .addComponent(txtContactno, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(sepImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmpID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sepEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContactno, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblContactNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4)
                        .addComponent(sepContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sepName, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sepAge, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblImagePath)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblGender)
                                        .addComponent(rbtMale)
                                        .addComponent(rbtFemale))
                                    .addComponent(rbtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)))
                        .addComponent(sepImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAddress)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblBloodGroup))))
                        .addGap(0, 33, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jtbData.setBackground(new java.awt.Color(36, 59, 85));
        jtbData.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        jtbData.setForeground(new java.awt.Color(255, 255, 255));
        jtbData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbData.setOpaque(false);
        jtbData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbData);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel6.setOpaque(false);

        btnNew.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rajesh\\Desktop\\newicon.png")); // NOI18N
        btnNew.setText("New");
        btnNew.setOpaque(false);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rajesh\\Documents\\NetBeansProjects\\Login U\\src\\images\\delete.png")); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setOpaque(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rajesh\\Desktop\\unnamed.png")); // NOI18N
        btnSave.setText("Save");
        btnSave.setOpaque(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setOpaque(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.setOpaque(false);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnPrint.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        btnPrint.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rajesh\\Downloads\\print-flat.png")); // NOI18N
        btnPrint.setText("Print");
        btnPrint.setOpaque(false);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnUpdate)
                    .addComponent(btnSave))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(btnPrint))
                .addGap(21, 21, 21))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee's Salary Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.setOpaque(false);

        lblDOJ.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblDOJ.setForeground(new java.awt.Color(255, 255, 255));
        lblDOJ.setText("DOJ");

        jdcDOJ.setNextFocusableComponent(jcbPost);

        lblPost.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblPost.setForeground(new java.awt.Color(255, 255, 255));
        lblPost.setText("Post");

        jcbPost.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "House Keeping", "Chef", "Waiter", "Receptionist", "" }));
        jcbPost.setSelectedIndex(-1);
        jcbPost.setNextFocusableComponent(cbxPaid);
        jcbPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPostActionPerformed(evt);
            }
        });

        lblSalary.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        lblSalary.setForeground(new java.awt.Color(255, 255, 255));
        lblSalary.setText("Salary");

        cbxPaid.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        cbxPaid.setForeground(new java.awt.Color(255, 255, 255));
        cbxPaid.setText("Paid");
        cbxPaid.setBorder(null);
        cbxPaid.setNextFocusableComponent(btnUploadImage);
        cbxPaid.setOpaque(false);
        cbxPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPaidActionPerformed(evt);
            }
        });

        cbxPending.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        cbxPending.setForeground(new java.awt.Color(255, 255, 255));
        cbxPending.setText("Pending");
        cbxPending.setBorder(null);
        cbxPending.setOpaque(false);
        cbxPending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPendingActionPerformed(evt);
            }
        });

        chktemp.setBorder(null);
        chktemp.setEnabled(false);
        chktemp.setFocusable(false);
        chktemp.setOpaque(false);
        chktemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chktempActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblDOJ, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jdcDOJ, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblPost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jcbPost, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(94, 94, 94)
                .addComponent(lblSalary)
                .addGap(35, 35, 35)
                .addComponent(cbxPaid)
                .addGap(40, 40, 40)
                .addComponent(cbxPending)
                .addGap(18, 18, 18)
                .addComponent(chktemp)
                .addContainerGap(203, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcDOJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDOJ, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblPost))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jcbPost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(chktemp)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSalary)
                            .addComponent(cbxPaid)
                            .addComponent(cbxPending))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        lblTitleBar.setBackground(new java.awt.Color(29, 35, 59));
        lblTitleBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblTitleBarMouseDragged(evt);
            }
        });
        lblTitleBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblTitleBarMousePressed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/left-arrow.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        javax.swing.GroupLayout lblTitleBarLayout = new javax.swing.GroupLayout(lblTitleBar);
        lblTitleBar.setLayout(lblTitleBarLayout);
        lblTitleBarLayout.setHorizontalGroup(
            lblTitleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblTitleBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        lblTitleBarLayout.setVerticalGroup(
            lblTitleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
        );

        jDesktopPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblImage.setBackground(new java.awt.Color(0, 0, 0));
        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jDesktopPane1.add(lblImage);
        lblImage.setBounds(10, 10, 140, 170);

        btnUploadImage.setFont(new java.awt.Font("Averia Serif Libre", 0, 14)); // NOI18N
        btnUploadImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/image upload.png"))); // NOI18N
        btnUploadImage.setText("Upload Image");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Averia Serif Libre", 1, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(255, 255, 255));
        lblSearch.setText("SEARCH");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(lblTitleBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlMainLayout.createSequentialGroup()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(btnUploadImage))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(14, Short.MAX_VALUE))))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(lblTitleBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearch)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 58, Short.MAX_VALUE))
        );

        add(pnlMain, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void txtContactnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactnoActionPerformed
  
    }//GEN-LAST:event_txtContactnoActionPerformed

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser .showOpenDialog(null);
        File sourceFile = fileChooser.getSelectedFile();
        
        if(sourceFile != null ){
            filePath = sourceFile.getAbsolutePath();
           txtImagePath.setText(filePath);
        try {
            File image = new File(filePath);
            
            
            BufferedImage thumbnail = Thumbnails.of(sourceFile).size(180,220).asBufferedImage();
            ByteArrayOutputStream os = new ByteArrayOutputStream();
            ImageIO.write(thumbnail,"jpg",os);
            
            byteImage = os.toByteArray();
            
            //byteImage  = Files.readAllBytes(sourceFile.toPath());
            
            viewImage = new ImageIcon(thumbnail);
            lblImage.setIcon(viewImage);
        } catch (Exception e) {
        JOptionPane.showMessageDialog(null,"Issue :" + e);
        }
        
            
        }
       
    }//GEN-LAST:event_btnUploadImageActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            String sql =  "INSERT INTO employeeinfo(empname, gender, age, bloodgroup, Contactno, post, doj, address,empimage, salary) VALUES (?,?,?,?,?,?,?,?,?,?)";
             preparedStatement = conn.prepareStatement(sql);
             
             preparedStatement.setString(1,txtName.getText());
             preparedStatement.setString(2,gender);
             preparedStatement.setString(3,txtAge.getText());
             preparedStatement.setString(4,jcbBloodGroup.getSelectedItem().toString());
             preparedStatement.setString(5,txtContactno.getText());
             preparedStatement.setString(6,jcbPost.getSelectedItem().toString());
             
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
             String strDate = sdf.format(jdcDOJ.getDate());
             
             preparedStatement.setString(7, strDate);
             preparedStatement.setString(8,txtAddress.getText());
            preparedStatement.setString(10,salary); 
            preparedStatement.setBytes(9,byteImage);
             
             boolean stmt = preparedStatement.execute();
             JOptionPane.showMessageDialog(null,"Record inserted successfully");
             
             clearFields();
             sql = "SELECT * FROM employeeinfo";
             updateTableData(sql);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue :" + e);
        }
       
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearFields();
    }//GEN-LAST:event_btnNewActionPerformed

    private void jtbDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbDataMouseClicked
        int selectedRow = jtbData.getSelectedRow();
        String selectedEmpId = jtbData.getModel().getValueAt(selectedRow, 0).toString();
        try {
            String sql = "SELECT * FROM employeeinfo WHERE empid = " +selectedEmpId;
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            if(rs.next()){
                txtEmpID.setText(rs.getString("empid"));
                txtName.setText(rs.getString("empname"));
                txtAddress.setText(rs.getString("address"));
                txtAge.setText(rs.getString("age"));
                txtContactno.setText(rs.getString("contactno"));
                String genderSelected = rs.getString("gender");
                if("Male".equals(genderSelected)){
                    gender = "Male";
                    rbtMale.setSelected(true);
                }else if("Female".equals(genderSelected)){
                    gender = "Female";
                    rbtFemale.setSelected(true);
                }
                jcbPost.setSelectedItem(rs.getString("post"));
                
                String salSelected = rs.getString("salary");
                if("Paid".equals(salSelected)){
                    salary = "Paid";
                    cbxPaid.setSelected(true);
                }else if("Pending".equals(salSelected)){
                    salary = "Pending";
                    cbxPending.setSelected(true);
                }
                
                jcbBloodGroup.setSelectedItem(rs.getString("bloodgroup"));

                String dateValue = rs.getString("doj");
                Date date = new SimpleDateFormat("yyyy-MM-dd").parse(dateValue);
                jdcDOJ.setDate(date);

               byte[] selectedImageData = rs.getBytes("empimage");
                /*saving to my class variable so that while updating if the image is no tchanged 
                  then too it will take old image
                */
               byteImage = selectedImageData;



    /*************************************************************************************************
     **************************************Special lines of code**************************************
     ************************************************************************************************/
                BufferedImage img = Thumbnails.of(ImageIO.read(new ByteArrayInputStream(selectedImageData))).size(180,220).asBufferedImage();
                ImageIcon i = new ImageIcon(img);
                //ImageIcon i = new ImageIcon(selectedImageData);
        /*If you remove the above lines from comment then please add comment to the above two lines*/
    /*************************************************************************************************
     *************************************************************************************************
     *************************************************************************************************
     */
                lblImage.setIcon(i);
                }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jtbDataMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            String sql = "UPDATE employeeinfo SET empname = ?,gender = ?,age = ?,bloodgroup = ?,Contactno = ?,post = ?,salary = ?,doj = ?,address = ?,empimage =? WHERE empid = ?";
            preparedStatement = conn.prepareStatement(sql);
            
             preparedStatement.setString(1,txtName.getText());
             preparedStatement.setString(2,gender);
             preparedStatement.setString(3,txtAge.getText());
             preparedStatement.setString(4,jcbBloodGroup.getSelectedItem().toString());
             preparedStatement.setString(5,txtContactno.getText());
             preparedStatement.setString(6,jcbPost.getSelectedItem().toString());
              preparedStatement.setString(7,salary);
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
             String strDate = sdf.format(jdcDOJ.getDate());
             
             preparedStatement.setString(8, strDate);
             preparedStatement.setString(9,txtAddress.getText());
             
             preparedStatement.setBytes(10, byteImage);
             preparedStatement.setInt(11,Integer.parseInt(txtEmpID.getText()));
            
             preparedStatement.execute();
             
             JOptionPane.showMessageDialog(null,"Record Updated successfully");
             
             sql = "SELECT * FROM employeeinfo";
             updateTableData(sql);
             
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null,"Issue : " +e);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        if(txtEmpID.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please select record to delete");
        }else{
            int btn = JOptionPane.showConfirmDialog(null,"Do yo wanna really delete record?","Delete",JOptionPane.YES_NO_CANCEL_OPTION);
            if(btn == JOptionPane.YES_OPTION){
                try {
                    String sql = "DELETE FROM employeeinfo WHERE empid = ?";
                    preparedStatement = conn.prepareStatement(sql);
                    preparedStatement.setString(1,txtEmpID.getText());
                    preparedStatement.execute();
                    JOptionPane.showMessageDialog(null,"Record deleted successfully");
                    clearFields();
                    sql = "SELECT * FROM employeeinfo";
                    updateTableData(sql);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null,"DELETE issue: "+e.getMessage());
                }finally{
                    try {
                        preparedStatement.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null,"Error while closing statement:"+e.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
     MessageFormat header = new MessageFormat("Employee List  Report Print");
     MessageFormat footer = new MessageFormat("Page{0, number, integer}");
        try {
            jtbData.print(JTable.PrintMode.FIT_WIDTH,header,footer);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Some Issue in printing : "+ e.getMessage());
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void rbtFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFemaleActionPerformed
        gender = "Female";
    }//GEN-LAST:event_rbtFemaleActionPerformed

    private void rbtMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMaleActionPerformed
        gender = "Male";
    }//GEN-LAST:event_rbtMaleActionPerformed

    private void txtEmpIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpIDActionPerformed
        
    }//GEN-LAST:event_txtEmpIDActionPerformed

    private void jcbPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPostActionPerformed
        
    }//GEN-LAST:event_jcbPostActionPerformed

    private void cbxPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPaidActionPerformed
        salary = "Paid";
    }//GEN-LAST:event_cbxPaidActionPerformed

    private void cbxPendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPendingActionPerformed
        salary = "Pending";
    }//GEN-LAST:event_cbxPendingActionPerformed

    private void rbtTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTempActionPerformed
        
    }//GEN-LAST:event_rbtTempActionPerformed

    private void lblTitleBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTitleBarMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-mouseX,y-mouseY);
    }//GEN-LAST:event_lblTitleBarMouseDragged

    private void chktempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chktempActionPerformed
    
        
    }//GEN-LAST:event_chktempActionPerformed

    private void lblTitleBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTitleBarMousePressed
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_lblTitleBarMousePressed

    private void sepNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sepNameFocusGained
        
    }//GEN-LAST:event_sepNameFocusGained

    private void txtNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusGained
        sepName.setBackground(Color.BLACK);
    }//GEN-LAST:event_txtNameFocusGained

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        sepName.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtNameFocusLost

    private void txtAgeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgeFocusGained
        sepAge.setBackground(Color.BLACK);
    }//GEN-LAST:event_txtAgeFocusGained

    private void txtAgeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgeFocusLost
        sepAge.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtAgeFocusLost

    private void txtContactnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactnoKeyTyped
        if(!Character.isDigit(evt.getKeyChar()))
		evt.consume();
      
    }//GEN-LAST:event_txtContactnoKeyTyped

    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        if(!Character.isDigit(evt.getKeyChar()))
		evt.consume();
    }//GEN-LAST:event_txtAgeKeyTyped

    private void txtContactnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactnoKeyReleased
        String mobilePatternString="^[789]\\d{9}$";
        Pattern mobilePattern = Pattern.compile(mobilePatternString);
	Matcher mobileMatcher = mobilePattern.matcher(txtContactno.getText());
        if(!mobileMatcher.matches()){
            sepContactNo.setBackground(Color.RED);
            txtContactno.setForeground(Color.RED);
        }
        else{
            sepContactNo.setBackground(Color.WHITE);
            txtContactno.setForeground(Color.WHITE);
        }
        
    }//GEN-LAST:event_txtContactnoKeyReleased

    private void txtContactnoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContactnoFocusGained
        sepContactNo.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtContactnoFocusGained

    private void txtContactnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContactnoFocusLost
        sepContactNo.setForeground(Color.WHITE);
    }//GEN-LAST:event_txtContactnoFocusLost

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        try {
            new Dashboard().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jLabel2MousePressed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
    
    }//GEN-LAST:event_txtSearchActionPerformed
 /*******************************************************************************************************************************
  this method is used to update the table in the database.
 **********************************************************************************************************************************/
    private void updateTableData(String sql){
        try {           
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            jtbData.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, " ISSUE : " + e);
        }finally{
            try {
                rs.close();
                preparedStatement.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Problem in closing rs or preparedStatement:");
            }
        }
        
    
    }
 /*******************************************************************************************************************************
 This method is used to clear all the fields.
 **********************************************************************************************************************************/
   
    private void clearFields(){
        txtEmpID.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtAge.setText("");
        txtContactno.setText("");
        txtImagePath.setText("");
        jcbBloodGroup.setSelectedIndex(-1);
        jcbPost.setSelectedIndex(-1);
        jdcDOJ.setDate(null);
        rbtTemp.setSelected(true);
        gender = null;
        lblImage.setIcon(null);
        chktemp.setSelected(true);
        cbxPaid.setSelected(false);
        cbxPending.setSelected(false);

    }
    
 /*******************************************************************************************************************************
  this method is used to search in the table.
 **********************************************************************************************************************************/
    private void searchFilter(){
        key = txtSearch.getText();
        String updateTableQuery;
        if(!key.equals(""))
            updateTableQuery = "SELECT * FROM employeeinfo WHERE empname like '%" + key + "%'";
        else
            updateTableQuery = "SELECT * FROM employeeinfo";
        updateTableData(updateTableQuery);
    }
    
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeDetails().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbxPaid;
    private javax.swing.JCheckBox cbxPending;
    private javax.swing.JCheckBox chktemp;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcbBloodGroup;
    private javax.swing.JComboBox<String> jcbPost;
    private com.toedter.calendar.JDateChooser jdcDOJ;
    private javax.swing.JTable jtbData;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblContactNo;
    private javax.swing.JLabel lblDOJ;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblImagePath;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPost;
    private javax.swing.JLabel lblSalary;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JPanel lblTitleBar;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JRadioButton rbtFemale;
    private javax.swing.JRadioButton rbtMale;
    private javax.swing.JRadioButton rbtTemp;
    private javax.swing.JSeparator sepAge;
    private javax.swing.JSeparator sepContactNo;
    private javax.swing.JSeparator sepEmployeeID;
    private javax.swing.JSeparator sepImagePath;
    private javax.swing.JSeparator sepName;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContactno;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JTextField txtImagePath;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
private String filePath = null;
private ImageIcon viewImage = null;
private String gender = null;
private byte[] byteImage = null; 
private Connection conn = null;
private PreparedStatement preparedStatement = null;
private  ResultSet rs = null;
private String key = "";
private String salary = null;
private int mouseX,mouseY;
private String mobileNum;

}
