
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import jiconfont.icons.FontAwesome;
import jiconfont.swing.IconFontSwing;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;


public class Dashboard extends java.awt.Frame {

    /**
     * Creates new form Dashboard
     */
    public Dashboard() throws SQLException {
        IconFontSwing.register(FontAwesome.getIconFont());
        initComponents();
        this.setLocationRelativeTo(null);
        drawPieChart();
        conn = DBConnection.connectDB();
        refreshList();
        checkin();
        checkout();
        refreshRoom();
     
       roomsAvailable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlMain = new javax.swing.JPanel();
        lblEmployee = new javax.swing.JLabel();
        lblRoom = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        pnlRoomSummary = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstRoom = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstName = new javax.swing.JList<>();
        pnlCheckin = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtCheckin = new javax.swing.JTextField();
        pnlCheckout = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtCheckout = new javax.swing.JTextField();
        pnlEmpInfo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstEmployee = new javax.swing.JList<>();
        pnlRoomAvailable = new javax.swing.JPanel();
        txtRoomAvail = new javax.swing.JTextField();
        lblRoomsAvailable = new javax.swing.JLabel();
        pnlChart = new javax.swing.JPanel();
        pnlUp = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(36, 59, 85));
        jPanel1.setToolTipText("");
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlMain.setBackground(new java.awt.Color(29, 29, 29));

        lblEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Employee.png"))); // NOI18N
        lblEmployee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblEmployeeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblEmployeeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblEmployeeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblEmployeeMouseReleased(evt);
            }
        });

        lblRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/room.png"))); // NOI18N
        lblRoom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblRoomMousePressed(evt);
            }
        });

        lblStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/stock.png"))); // NOI18N
        lblStock.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblStockMousePressed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStock, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(lblEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(lblRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(lblStock, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(251, Short.MAX_VALUE))
        );

        jPanel1.add(pnlMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 760));

        pnlRoomSummary.setBackground(new java.awt.Color(45, 137, 239));
        pnlRoomSummary.setForeground(new java.awt.Color(255, 255, 255));
        pnlRoomSummary.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlRoomSummary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlRoomSummaryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlRoomSummaryMouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Averia Serif Libre", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/RoomSummary.png"))); // NOI18N

        lstRoom.setBackground(new java.awt.Color(45, 137, 239));
        lstRoom.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lstRoom.setForeground(new java.awt.Color(255, 255, 255));
        lstRoom.setOpaque(false);
        jScrollPane2.setViewportView(lstRoom);

        lstName.setBackground(new java.awt.Color(45, 137, 239));
        lstName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lstName.setForeground(new java.awt.Color(255, 255, 255));
        lstName.setOpaque(false);
        jScrollPane3.setViewportView(lstName);

        javax.swing.GroupLayout pnlRoomSummaryLayout = new javax.swing.GroupLayout(pnlRoomSummary);
        pnlRoomSummary.setLayout(pnlRoomSummaryLayout);
        pnlRoomSummaryLayout.setHorizontalGroup(
            pnlRoomSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRoomSummaryLayout.createSequentialGroup()
                .addGroup(pnlRoomSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRoomSummaryLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRoomSummaryLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        pnlRoomSummaryLayout.setVerticalGroup(
            pnlRoomSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRoomSummaryLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(pnlRoomSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel1.add(pnlRoomSummary, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 450, 349, 240));

        pnlCheckin.setBackground(new java.awt.Color(255, 0, 151));
        pnlCheckin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlCheckinMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlCheckinMouseExited(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Averia Serif Libre", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/CheckIn.png"))); // NOI18N

        txtCheckin.setFont(new java.awt.Font("Averia Serif Libre", 0, 36)); // NOI18N
        txtCheckin.setForeground(new java.awt.Color(255, 255, 255));
        txtCheckin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCheckin.setBorder(null);
        txtCheckin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtCheckin.setFocusable(false);
        txtCheckin.setOpaque(false);
        txtCheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCheckinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCheckinLayout = new javax.swing.GroupLayout(pnlCheckin);
        pnlCheckin.setLayout(pnlCheckinLayout);
        pnlCheckinLayout.setHorizontalGroup(
            pnlCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckinLayout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addGroup(pnlCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCheckinLayout.createSequentialGroup()
                        .addComponent(txtCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCheckinLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))))
        );
        pnlCheckinLayout.setVerticalGroup(
            pnlCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckinLayout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(txtCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jPanel1.add(pnlCheckin, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 350, 247));

        pnlCheckout.setBackground(new java.awt.Color(0, 163, 0));
        pnlCheckout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlCheckoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlCheckoutMouseExited(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Averia Serif Libre", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/CheckOut.png"))); // NOI18N

        txtCheckout.setFont(new java.awt.Font("Averia Serif Libre", 0, 36)); // NOI18N
        txtCheckout.setForeground(new java.awt.Color(255, 255, 255));
        txtCheckout.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCheckout.setBorder(null);
        txtCheckout.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtCheckout.setFocusable(false);
        txtCheckout.setOpaque(false);
        txtCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCheckoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCheckoutLayout = new javax.swing.GroupLayout(pnlCheckout);
        pnlCheckout.setLayout(pnlCheckoutLayout);
        pnlCheckoutLayout.setHorizontalGroup(
            pnlCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckoutLayout.createSequentialGroup()
                .addGap(0, 72, Short.MAX_VALUE)
                .addGroup(pnlCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCheckoutLayout.createSequentialGroup()
                        .addComponent(txtCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCheckoutLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))))
        );
        pnlCheckoutLayout.setVerticalGroup(
            pnlCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckoutLayout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(txtCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jPanel1.add(pnlCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 110, 350, 250));

        pnlEmpInfo.setBackground(new java.awt.Color(238, 17, 17));
        pnlEmpInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlEmpInfoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlEmpInfoMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Averia Serif Libre", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/EmployeeInformation.png"))); // NOI18N

        lstEmployee.setBackground(new java.awt.Color(238, 17, 17));
        lstEmployee.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lstEmployee.setForeground(new java.awt.Color(255, 255, 255));
        lstEmployee.setOpaque(false);
        jScrollPane1.setViewportView(lstEmployee);

        javax.swing.GroupLayout pnlEmpInfoLayout = new javax.swing.GroupLayout(pnlEmpInfo);
        pnlEmpInfo.setLayout(pnlEmpInfoLayout);
        pnlEmpInfoLayout.setHorizontalGroup(
            pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmpInfoLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEmpInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        pnlEmpInfoLayout.setVerticalGroup(
            pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmpInfoLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jPanel1.add(pnlEmpInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 106, 350, 250));

        pnlRoomAvailable.setBackground(new java.awt.Color(159, 0, 167));
        pnlRoomAvailable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlRoomAvailableMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlRoomAvailableMouseExited(evt);
            }
        });

        txtRoomAvail.setFont(new java.awt.Font("Averia Serif Libre", 0, 36)); // NOI18N
        txtRoomAvail.setForeground(new java.awt.Color(255, 255, 255));
        txtRoomAvail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRoomAvail.setBorder(null);
        txtRoomAvail.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtRoomAvail.setOpaque(false);

        lblRoomsAvailable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/RoomsAvailable.png"))); // NOI18N

        javax.swing.GroupLayout pnlRoomAvailableLayout = new javax.swing.GroupLayout(pnlRoomAvailable);
        pnlRoomAvailable.setLayout(pnlRoomAvailableLayout);
        pnlRoomAvailableLayout.setHorizontalGroup(
            pnlRoomAvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRoomAvailableLayout.createSequentialGroup()
                .addGroup(pnlRoomAvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRoomAvailableLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(txtRoomAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRoomAvailableLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(lblRoomsAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        pnlRoomAvailableLayout.setVerticalGroup(
            pnlRoomAvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRoomAvailableLayout.createSequentialGroup()
                .addComponent(lblRoomsAvailable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(txtRoomAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(pnlRoomAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 450, 340, 240));

        pnlChart.setBackground(new java.awt.Color(227, 162, 26));
        pnlChart.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlChart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlChartMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlChartMouseExited(evt);
            }
        });
        pnlChart.setLayout(null);
        jPanel1.add(pnlChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 450, 346, 240));

        pnlUp.setBackground(new java.awt.Color(29, 29, 29));
        pnlUp.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlUpMouseDragged(evt);
            }
        });
        pnlUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlUpMousePressed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Iconic_2717(0)_48.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });

        javax.swing.GroupLayout pnlUpLayout = new javax.swing.GroupLayout(pnlUp);
        pnlUp.setLayout(pnlUpLayout);
        pnlUpLayout.setHorizontalGroup(
            pnlUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUpLayout.createSequentialGroup()
                .addContainerGap(1237, Short.MAX_VALUE)
                .addComponent(jLabel5))
        );
        pnlUpLayout.setVerticalGroup(
            pnlUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(pnlUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
     private void close(){
        WindowEvent we = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(we);
    }
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
       System.exit(0);
    }//GEN-LAST:event_exitForm

    private void pnlUpMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlUpMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-mouseX,y-mouseY);
    }//GEN-LAST:event_pnlUpMouseDragged

    private void pnlUpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlUpMousePressed
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_pnlUpMousePressed

    private void pnlRoomSummaryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlRoomSummaryMouseEntered
        pnlRoomSummary.setBackground(new Color(69,150,241));
    }//GEN-LAST:event_pnlRoomSummaryMouseEntered

    private void pnlRoomSummaryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlRoomSummaryMouseExited
        pnlRoomSummary.setBackground(new Color(45,137,239));
    }//GEN-LAST:event_pnlRoomSummaryMouseExited

    private void lblEmployeeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEmployeeMouseEntered
//         jLabel11.setBorder(new LineBorder(Color.white));
    }//GEN-LAST:event_lblEmployeeMouseEntered

    private void lblEmployeeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEmployeeMouseExited
        //jLabel11.setBorder(null);
    }//GEN-LAST:event_lblEmployeeMouseExited

    private void lblEmployeeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEmployeeMousePressed
       // lblEmployee.setBorder(new BevelBorder(BevelBorder.LOWERED));
       new EmployeeDetails().setVisible(true);
       
    }//GEN-LAST:event_lblEmployeeMousePressed

    private void lblEmployeeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEmployeeMouseReleased
//        lblEmployee.setBorder(new BevelBorder(BevelBorder.RAISED));
    }//GEN-LAST:event_lblEmployeeMouseReleased

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
       close();
    }//GEN-LAST:event_jLabel5MousePressed

    private void pnlCheckinMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCheckinMouseEntered
        pnlCheckin.setBackground(new Color(255,26,161));
    }//GEN-LAST:event_pnlCheckinMouseEntered

    private void pnlCheckinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCheckinMouseExited
        pnlCheckin.setBackground(new Color(255,0,151));
    }//GEN-LAST:event_pnlCheckinMouseExited

    private void pnlCheckoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCheckoutMouseEntered
        pnlCheckout.setBackground(new Color(0,189,0));
    }//GEN-LAST:event_pnlCheckoutMouseEntered

    private void pnlCheckoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCheckoutMouseExited
        pnlCheckout.setBackground(new Color(0,163,0));
    }//GEN-LAST:event_pnlCheckoutMouseExited

    private void pnlEmpInfoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEmpInfoMouseEntered
        pnlEmpInfo.setBackground(new Color(240,41,41));
    }//GEN-LAST:event_pnlEmpInfoMouseEntered

    private void pnlEmpInfoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEmpInfoMouseExited
        pnlEmpInfo.setBackground(new Color(238,17,17));
    }//GEN-LAST:event_pnlEmpInfoMouseExited

    private void pnlChartMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlChartMouseEntered
        pnlChart.setBackground(new Color(231,172,47));
       
    }//GEN-LAST:event_pnlChartMouseEntered

    private void pnlChartMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlChartMouseExited
        pnlChart.setBackground(new Color(227,162,26));
    }//GEN-LAST:event_pnlChartMouseExited

    private void pnlRoomAvailableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlRoomAvailableMouseEntered
        pnlRoomAvailable.setBackground(new Color(183,0,193));
    }//GEN-LAST:event_pnlRoomAvailableMouseEntered

    private void pnlRoomAvailableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlRoomAvailableMouseExited
        pnlRoomAvailable.setBackground(new Color(159,0,167));
    }//GEN-LAST:event_pnlRoomAvailableMouseExited

    private void txtCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCheckoutActionPerformed
       
    }//GEN-LAST:event_txtCheckoutActionPerformed

    private void lblRoomMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRoomMousePressed
         new Room().setVisible(true);
    }//GEN-LAST:event_lblRoomMousePressed

    private void lblStockMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblStockMousePressed
       new Stock().setVisible(true);
    }//GEN-LAST:event_lblStockMousePressed

    private void txtCheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCheckinActionPerformed

    }//GEN-LAST:event_txtCheckinActionPerformed
    
 /*********************************************************************************************************************************
  this method creates a piechart.
 *******************************************************************************************************************************/
    private void drawPieChart(){
        DefaultPieDataset dataset = new DefaultPieDataset();        
  
        JFreeChart chart = ChartFactory.createPieChart("", dataset, false, true, false);
        dataset.setValue("Remotes", new Double(20));
        dataset.setValue("Kitchen Equipments", new Double(20));
        dataset.setValue("Room Essentials", new Double(40));
        dataset.setValue("Sanitary", new Double(10));
       
        ChartPanel cp = new ChartPanel(chart);
        
        PiePlot pp = (PiePlot) chart.getPlot();
        pp.setBackgroundPaint(new Color(227,162,26));
        pp.setOutlinePaint(new Color(227,162,26));
        pp.setShadowPaint(null);
        pp.setLabelOutlinePaint(new Color(227,162,26));
        chart.setBackgroundPaint(new Color(227,162,26));
        cp.setBounds(10, 10, 330, 210);
        cp.setSize(300, 200);
        cp.setBorder(null);
        pnlChart.add(cp);        
   }
    
/*********************************************************************************************************************************
  this method fetches data from database and displays the number of checkins on current date.
 *******************************************************************************************************************************/  
    
    private void checkin(){
        try {
            String sql = "SELECT isVacant FROM room WHERE checkindate = CURDATE()";
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            
            while(rs.next()){
                if(rs.getBoolean(1) == true){
                    count++;
                    
                    txtCheckin.setText(count + "");
                }
            }
        } catch (Exception e) {
        }
    }
    
 /*********************************************************************************************************************************
  this method fetches data from database and displays the number of checkouts on current date.
 *******************************************************************************************************************************/   
    
    private void checkout(){
       try {
            String sql = "SELECT isVacant FROM room WHERE checkoutdate = CURDATE()";
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            
            while(rs.next()){
                if(rs.getBoolean(1) == true){
                    count1++;
                    txtCheckout.setText(count1 + "");
                }
            }
            
        } catch (Exception e) {
        }
    
    }
    
/*********************************************************************************************************************************

  this method fetches data from database and displays the number of rooms available.
 *******************************************************************************************************************************/     
    
    private void roomsAvailable(){
        try {
            String sql = "Select isVacant FROM room";
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery(sql);
            int availableRooms;
            
            while(rs.next()){
                if(rs.getBoolean(1) == true){
                    count1++;
                }
            }
            
            availableRooms = 16 - count1;
            txtRoomAvail.setText(availableRooms +"");
        } catch (Exception e) {
        }
           
    
    }
    
    
/******************************************************************************************************************************
  this method fetches data from database and displays the name and id of present employees working.
 *******************************************************************************************************************************/        
    private void refreshList(){
        try {
            Vector v = new Vector();
            
            String sql = "SELECT * FROM employeeinfo";
            
            preparedStatement = conn.prepareStatement(sql);
            
            rs = preparedStatement.executeQuery(sql);
            
            while(rs.next()){
                v.add(rs.getString("empname"));
                
            }
           
            lstEmployee.setListData(v);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Some error : " +e);
        }
        
    }
/*********************************************************************************************************************************
  this method fetches data from database and displays the room on and name of the person who checked in.
 *******************************************************************************************************************************/
       private void refreshRoom(){
        try {
            Vector a = new Vector();
            Vector v = new Vector();
            String sql = "SELECT * FROM room";
            
            preparedStatement = conn.prepareStatement(sql);
            
            rs = preparedStatement.executeQuery(sql);
            
            while(rs.next()){
                v.add(rs.getString("firstname"));
                a.add(rs.getString("roomno"));
                
            }
           
            lstName.setListData(v);
            lstRoom.setListData(a);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Some error : " +e);
        }
        
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Dashboard().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblEmployee;
    private javax.swing.JLabel lblRoom;
    private javax.swing.JLabel lblRoomsAvailable;
    private javax.swing.JLabel lblStock;
    private javax.swing.JList<String> lstEmployee;
    private javax.swing.JList<String> lstName;
    private javax.swing.JList<String> lstRoom;
    private javax.swing.JPanel pnlChart;
    private javax.swing.JPanel pnlCheckin;
    private javax.swing.JPanel pnlCheckout;
    private javax.swing.JPanel pnlEmpInfo;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlRoomAvailable;
    private javax.swing.JPanel pnlRoomSummary;
    private javax.swing.JPanel pnlUp;
    private javax.swing.JTextField txtCheckin;
    private javax.swing.JTextField txtCheckout;
    private javax.swing.JTextField txtRoomAvail;
    // End of variables declaration//GEN-END:variables
int mouseX,mouseY;
private Connection conn = null;
private PreparedStatement preparedStatement = null;
private  ResultSet rs = null;
private Statement statement;
private int count = 0,count1 = 0;

}
